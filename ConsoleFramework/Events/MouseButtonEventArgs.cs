using System;
using ConsoleFramework.Core;

namespace ConsoleFramework.Events
{
  public class MouseButtonEventArgs : MouseEventArgs
  {
    public MouseButtonEventArgs(object source, RoutedEvent routedEvent)
      : base(source, routedEvent)
    {
    }

    public MouseButtonEventArgs(
      object source,
      RoutedEvent routedEvent,
      Point rawPosition,
      MouseButtonState leftButton,
      MouseButtonState middleButton,
      MouseButtonState rightButton,
      MouseButton button,
      int clickCount = 1,
      bool autoRepeat = false)
      : base(source, routedEvent, rawPosition, leftButton, middleButton, rightButton)
    {
      this._button = button;
      this._clickCount = clickCount;
      this._autoRepeat = autoRepeat;
    }

    public MouseButtonState ButtonState
    {
      get
      {
        switch (_button)
        {
          case MouseButton.Left:
            return LeftButton;

          case MouseButton.Middle:
            return MiddleButton;

          case MouseButton.Right:
            return RightButton;
        }

        throw new InvalidOperationException("This code should not be reached.");
      }
    }

    private readonly MouseButton _button;

    public MouseButton ChangedButton
    {
      get { return _button; }
    }

    private readonly int _clickCount;

    public int ClickCount
    {
      get { return _clickCount; }
    }

    private readonly bool _autoRepeat;

    /// <summary>
    /// Returns true if this event is autogenerated by timer tick
    /// (if user presses and holds left mouse button, for example).
    /// </summary>
    public bool AutoRepeat
    {
      get { return _autoRepeat; }
    }
  }
}
